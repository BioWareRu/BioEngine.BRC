@using Sitko.Core.Storage
@using System.IO
@using BioEngine.BRC.Core
@using BioEngine.BRC.Core.Entities.Blocks
@inject IStorage<BRCStorageConfig> Storage
@inject DialogService DialogService

@if (Block.Data.File == null)
{
    <RadzenButton Text=@("Выбрать файл") Click="@ShowStorageDialogAsync"/>
}
else
{
    <div class="row" style="margin-bottom: 0">
        <div class="col-11"><RadzenImage Path="@(Storage.PublicUri(Block.Data.File).ToString())" /></div>
        <div class="col-1" style="text-align: right"><RadzenIcon Icon="delete" title="Удалить" @onclick="@(() => Block.Data.File = null)"></RadzenIcon></div>
    </div>
        
}
<ValidationMessage For="@(() => Block.Data.File)"></ValidationMessage>

@code
{
    [Parameter]
    public FileBlock Block { get; set; }

    public async Task ShowStorageDialogAsync()
    {
        var result = await DialogService.OpenAsync<StorageExplorerDialog>("Выбор файла", new Dictionary<string, object>
        {
            {"Prefix", "storage"},
            {"IsMultiple", false}
        });
        if (result is StorageItem item)
        {
            Block.Data.File = item;
        }
    }
}
